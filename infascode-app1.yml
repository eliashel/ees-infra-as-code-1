---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Enable environment for app1'
Mappings:
  Define:
    # Define all global variables or constants for the environment. 
    # The most of those variables or constants will by tagged on the resources.
    Global:
      # Organization Id is a identifier for Organization en AWS. 
      # It us unique and abbrevation for name of organization.
      OrganizationId: ees
      # ID for application.
      AppId: app1
      # Version for application  
      AppVersion: 0.0.1
      # Project ID for this environment
      ProjectId: first-web-static
      # Name of the proprietary organization of all resources that will be created with this template.
      # OrganizationName should be mapped on AWS Organizations.
      OrganizationName: eliashel
      # Version of this template
      CFTemplateVersion: 0.0.2
    VPC:
      CidrBlock: '10.1.0.0/16'
    Subnets:
      # Principal Availability Zone (A)
      # 0000 0000 : 0 
      SubnetADMZCidrBlock: '10.1.0.0/20'
      # 0001 0000 : 16 
      SubnetAWEBCidrBlock: '10.1.16.0/20'
      # 0010 0000 : 32 
      #SubnetAAPPCidrBlock: '10.1.32.0/20'
      # 0011 0000 : 48 
      #SubnetADBCidrBlock:  '10.1.48.0/20'
      # Secundary Availability Zone (B)
      # 0100 0000 : 64 
      SubnetBDMZCidrBlock: '10.1.64.0/20'
      # 0101 0000 : 80 
      SubnetBWEBCidrBlock: '10.1.80.0/20'
      # 0110 0000 : 96 
      #SubnetBAPPCidrBlock: '10.1.96.0/20'
      # 0111 0000 : 112 
      #SubnetBDBCidrBlock:  '10.1.112.0/20'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Environment Parameters'
      Parameters:
      - EnvironmentId
      - EnvironmentType
Parameters:
  EnvironmentId:
    Description: 'Ensure you set unique ID for environment. You can identify all resources from the environment through this ID.'
    Type:  Number
    MinValue: 1
    MaxValue: 999
    ConstraintDescription: 'EnvironmentId must be numeric between [1-999].'
  EnvironmentType:
    Description: 'What type of the environment do you want to deploy? Select one...'
    Type: String
    AllowedValues: [dev, test, prod]
    Default: dev
    ConstraintDescription: 'Must specify: dev, test or prod'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !FindInMap [ Define, VPC, CidrBlock ]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Join [ '', [ !FindInMap [ Define, Global, OrganizationId ], '-', !FindInMap [ Define, Global, AppId ], '-', !Sub '${EnvironmentType}-${EnvironmentId}-vpc' ] ]
      - Key: AppId
        Value: !FindInMap [ Define, Global, AppId ]
      - Key: AppVersion
        Value: !FindInMap [ Define, Global, AppVersion ]
      - Key: ProjectId
        Value: !FindInMap [ Define, Global, ProjectId ]
      - Key: OrganizationId
        Value: !FindInMap [ Define, Global, OrganizationId ]
      - Key: OrganizationName
        Value: !FindInMap [ Define, Global, OrganizationName ]
      - Key: CFTemplateVersion
        Value: !FindInMap [ Define, Global, CFTemplateVersion ]
      - Key: EnvironmentId
        Value: !Ref EnvironmentId
      - Key: EnvironmentType
        Value: !Ref EnvironmentType
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value: !Join [ '', [ !FindInMap [ Define, Global, OrganizationId ], '-', !FindInMap [ Define, Global, AppId ], '-', !Sub '${EnvironmentType}-${EnvironmentId}-vpc' ] ]
      - Key: AppId
        Value: !FindInMap [ Define, Global, AppId ]
      - Key: AppVersion
        Value: !FindInMap [ Define, Global, AppVersion ]
      - Key: ProjectId
        Value: !FindInMap [ Define, Global, ProjectId ]
      - Key: OrganizationId
        Value: !FindInMap [ Define, Global, OrganizationId ]
      - Key: OrganizationName
        Value: !FindInMap [ Define, Global, OrganizationName ]
      - Key: CFTemplateVersion
        Value: !FindInMap [ Define, Global, CFTemplateVersion ]
      - Key: EnvironmentId
        Value: !Ref EnvironmentId
      - Key: EnvironmentType
        Value: !Ref EnvironmentType
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetADMZ:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap [ Define, Subnets, SubnetADMZCidrBlock ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join [ '', [ !FindInMap [ Define, Global, OrganizationId ], '-', !FindInMap [ Define, Global, AppId ], '-', !Sub '${EnvironmentType}-${EnvironmentId}-subnet-dmz-a' ] ]
      - Key: AppId
        Value: !FindInMap [ Define, Global, AppId ]
      - Key: AppVersion
        Value: !FindInMap [ Define, Global, AppVersion ]
      - Key: ProjectId
        Value: !FindInMap [ Define, Global, ProjectId ]
      - Key: OrganizationId
        Value: !FindInMap [ Define, Global, OrganizationId ]
      - Key: OrganizationName
        Value: !FindInMap [ Define, Global, OrganizationName ]
      - Key: CFTemplateVersion
        Value: !FindInMap [ Define, Global, CFTemplateVersion ]
      - Key: EnvironmentId
        Value: !Ref EnvironmentId
      - Key: EnvironmentType
        Value: !Ref EnvironmentType
  SubnetAWEB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap [ Define, Subnets, SubnetAWEBCidrBlock ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join [ '', [ !FindInMap [ Define, Global, OrganizationId ], '-', !FindInMap [ Define, Global, AppId ], '-', !Sub '${EnvironmentType}-${EnvironmentId}-subnet-web-a' ] ]
      - Key: AppId
        Value: !FindInMap [ Define, Global, AppId ]
      - Key: AppVersion
        Value: !FindInMap [ Define, Global, AppVersion ]
      - Key: ProjectId
        Value: !FindInMap [ Define, Global, ProjectId ]
      - Key: OrganizationId
        Value: !FindInMap [ Define, Global, OrganizationId ]
      - Key: OrganizationName
        Value: !FindInMap [ Define, Global, OrganizationName ]
      - Key: CFTemplateVersion
        Value: !FindInMap [ Define, Global, CFTemplateVersion ]
      - Key: EnvironmentId
        Value: !Ref EnvironmentId
      - Key: EnvironmentType
        Value: !Ref EnvironmentType
  SubnetBDMZ:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !FindInMap [ Define, Subnets, SubnetBDMZCidrBlock ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join [ '', [ !FindInMap [ Define, Global, OrganizationId ], '-', !FindInMap [ Define, Global, AppId ], '-', !Sub '${EnvironmentType}-${EnvironmentId}-subnet-dmz-b' ] ]
      - Key: AppId
        Value: !FindInMap [ Define, Global, AppId ]
      - Key: AppVersion
        Value: !FindInMap [ Define, Global, AppVersion ]
      - Key: ProjectId
        Value: !FindInMap [ Define, Global, ProjectId ]
      - Key: OrganizationId
        Value: !FindInMap [ Define, Global, OrganizationId ]
      - Key: OrganizationName
        Value: !FindInMap [ Define, Global, OrganizationName ]
      - Key: CFTemplateVersion
        Value: !FindInMap [ Define, Global, CFTemplateVersion ]
      - Key: EnvironmentId
        Value: !Ref EnvironmentId
      - Key: EnvironmentType
        Value: !Ref EnvironmentType
  SubnetBWEB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !FindInMap [ Define, Subnets, SubnetBWEBCidrBlock ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join [ '', [ !FindInMap [ Define, Global, OrganizationId ], '-', !FindInMap [ Define, Global, AppId ], '-', !Sub '${EnvironmentType}-${EnvironmentId}-subnet-web-b' ] ]
      - Key: AppId
        Value: !FindInMap [ Define, Global, AppId ]
      - Key: AppVersion
        Value: !FindInMap [ Define, Global, AppVersion ]
      - Key: ProjectId
        Value: !FindInMap [ Define, Global, ProjectId ]
      - Key: OrganizationId
        Value: !FindInMap [ Define, Global, OrganizationId ]
      - Key: OrganizationName
        Value: !FindInMap [ Define, Global, OrganizationName ]
      - Key: CFTemplateVersion
        Value: !FindInMap [ Define, Global, CFTemplateVersion ]
      - Key: EnvironmentId
        Value: !Ref EnvironmentId
      - Key: EnvironmentType
        Value: !Ref EnvironmentType
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  VPC:
    Description: 'VPC.'
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
